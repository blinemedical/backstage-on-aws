version: 0.2

env:
  variables:
    DOCKER_BUILDKIT: 1

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $BASE_REPO_URI
      - aws secretsmanager get-secret-value --secret-id $GITHUB_APP_ARN --query 'SecretString' --output text > gh-org-app.yaml
      - aws secretsmanager get-secret-value --secret-id '/dev/backstage/github-blinemedical-app-file' --output text --query SecretString > github-app-backstage-blinemedical-credentials.yaml
      - aws secretsmanager get-secret-value --secret-id '/dev/backstage/github-laerdallabs-app-file' --output text --query SecretString > github-app-backstage-laerdallabs-credentials.yaml
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - docker pull $REPOSITORY_URI:latest || true
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build --cache-from $REPOSITORY_URI:latest -t $REPOSITORY_URI:latest -f $DOCKERFILE .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
    files: imagedefinitions.json
