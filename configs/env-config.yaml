# prod environment deploying to prod account
# you can add any env variables you like here to pass to the container.
# if you want to add secrets and pass them as env vars to the container,
# it is recommended you follow the example in stage_resources.py for secret mapping.
# that method prevents them from being in the clear at runtime.

common:
  # postgres config, host gets modified in deployment, db is used by docker-compose
  POSTGRES_PORT: '5432'
  POSTGRES_DB: 'backstage'
  POSTGRES_USER: 'postgres'

  # AWS Environment
  AWS_REGION: 'us-east-1'
  AWS_ACCOUNT: "404825630592"
  TAG_STACK_NAME: "backstage-infra"
  TAG_STACK_PRODUCT: "platform"

  # Build and Infra Info
  CONTAINER_PORT: '7000'
  CONTAINER_NAME: 'backstage'
  DOMAIN_NAME: "laerdal-apps-dev.io"
  ACM_ARN: "arn:aws:acm:us-east-1:404825630592:certificate/f71dd382-d222-4e7b-848d-d4d05411df8d"
  ECR_REPO_NAME: "laerdallabs/backstage"
  # optional will default to 'dockerfile'
  DOCKERFILE: 'Dockerfile.prod'

  # CodePipeline repo info
  GITHUB_APP_REPO: "backstage"
  GITHUB_INFRA_REPO: "backstage-on-aws"
  GITHUB_ORG: 'blinemedical'
  # Github Connection for Code* services
  CODESTAR_CONN_ARN: "arn:aws:codestar-connections:us-east-1:404825630592:connection/94cf32af-07bb-43f5-9c06-1f4c1c2503c5"
  # Chatbot Connection for Code* notifications
  # CODESTAR_NOTIFY_ARN: ""
  # can define the following but defaults to 'main'
  #GITHUB_INFRA_BRANCH: "main"
  #GITHUB_APP_BRANCH: "main"

  # github secrets lookup, used by app to configure integration to github
  GITHUB_BLINE_APP_ARN: "arn:aws:secretsmanager:us-east-1:404825630592:secret:/dev/backstage/github-blinemedical-app-file-PgUA5s"
  GITHUB_LLDC_APP_ARN: "arn:aws:secretsmanager:us-east-1:404825630592:secret:/dev/backstage/github-laerdallabs-app-file-A6Wd4n"

  # AWS Secret Name use by APP for auth to aws services.
  AWS_AUTH_SECRET_NAME: "/dev/backstage/aws-auth-credentials"

  # Jira Token Secret Name used by Jira plugin
  JIRA_TOKEN_SECRET_NAME: "/dev/backstage/jira-token"

# ENV var overrides per stage
stages:
  test:
    ### This Config overrides for test stage
    # Routing & Discovery
    HOST_NAME: 'backstage'
    # Github OAuth Secret Name
    GITHUB_AUTH_SECRET_NAME: "/dev/backstage/github-oauth-credentials"
    # Node Env
    NODE_ENV: 'development'
    LOG_LEVEL: 'debug'
    # stage approval will install a manual approval gate in front of a deployment action
    STAGE_APPROVAL: False

  # prod:
  #   ### This Config overrides for prod stage
  #   # Routing & Discovery
  #   HOST_NAME: 'mybackstage'
  #   # github OAuth secret Name
  #   GITHUB_AUTH_SECRET_NAME: ""
  #   # stage approval will install a manual approval gate in front of a deployment action
  #   STAGE_APPROVAL: True
  #   # approval emails to be notified by approval action
  #   APPROVAL_EMAILS:
  #     - ""
